y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Inaugural Speech (multi-terms (1st))')
ggplot(data=multi_terms_inaug_sent2.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Inaugural Speech (multi-terms (2nd))')
par(mfrow=c(1,3))
## Inaugural speeches
ggplot(data=single_term_inaug_sent.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Inaugural Speech (single-term)')
ggplot(data=multi_terms_inaug_sent1.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Inaugural Speech (multi-terms (1st))')
ggplot(data=multi_terms_inaug_sent2.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Inaugural Speech (multi-terms (2nd))')
par(mfrow=c(1,3))
## Nomination speeches
ggplot(data=single_term_nomin_sent.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (single-term)')
ggplot(data=multi_terms_nomin_sent1.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (multi-terms (1st))')
ggplot(data=multi_terms_nomin_sent2.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (multi-terms (2nd))')
par(mfrow=c(1,3))
## Nomination speeches
ggplot(data=single_term_nomin_sent.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (single-term)')
ggplot(data=multi_terms_nomin_sent1.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (multi-terms (1st))')
ggplot(data=multi_terms_nomin_sent2.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (multi-terms (2nd))')
par(mfrow=c(1,3))
## Nomination speeches
ggplot(data=single_term_nomin_sent.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (single-term)')
ggplot(data=multi_terms_nomin_sent1.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (multi-terms (1st))')
ggplot(data=multi_terms_nomin_sent2.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (multi-terms (2nd))')
single_term_inaug_sent.list%>%filter(President=='William J.Clinton', word.count<=5)%<%sample_n(5)
single_term_inaug_sent.list%>%filter(President=='William J.Clinton', word.count<=5)%>%sample_n(5)
single_term_inaug_sent.list%>%filter(President=='William J.Clinton', word.count<=5)%>%sample_n(2)
single_term_inaug_sent.list%>%filter(President=='Barak Obama', word.count<=5)%>%sample_n(2)
single_term_inaug_sent.list%>%filter(President=='Barak Obama', word.count<=5)%>%select(sentences)%>%sample_n(2)
single_term_inaug_sent.list%>%filter(President=='Barak Obama', word.count<=5)%>%select(sentences)%>%sample_n(2)
single_term_inaug_sent.list%>%filter(File=='BarakObama', word.count<=5)%>%select(sentences)%>%sample_n(2)
single_term_inaug_sent.list%>%filter(File=='BarackObama', word.count<=5)%>%select(sentences)%>%sample_n(2)
single_term_inaug_sent.list %>%filter(File=='BarackObama', word.count<=3)%>%select(sentences)%>%sample_n(2)
single_term_inaug_sent.list %>%
filter(File=='BarackObama',
word.count<=3)%>%
select(sentences)%>%
sample_n(2)
single_term_inaug_sent.list %>%
filter(File=='BarackObama',
word.count<=3)%>%
select(sentences)%>%
sample_n(2,replace=TRUE)
single_term_inaug_sent.list %>%
filter(File=='BarackObama',
word.count<=3)%>%
select(sentences)
single_term_inaug_sent.list %>%
filter(President=='Barack Obama',
word.count<=3)%>%
select(sentences)
speech.df=tbl_df(single_term_inaug_sent.list)%>%
filter(File=="BarackObama", word.count>=5)%>%
select(sentences, anger:trust)
View(speech.df)
df<-single_term_inaug_sent.list['President'=='Barack Obama',]
View(df)
unique(single_term_inaug_sent.list$President)
speech.df=tbl_df(multi_terms_inaug_sent.list1)%>%
filter(File=="BarackObama", word.count>=5)%>%
select(sentences, anger:trust)
speech.df=tbl_df(multi_terms_inaug_sent1.list)%>%
filter(File=="BarackObama", word.count>=5)%>%
select(sentences, anger:trust)
speech.df=as.data.frame(speech.df)
as.character(speech.df$sentences[apply(speech.df[,-1], 2, which.max)])
print("Herbert Hoover")
speech.df=tbl_df(single_term_inaug_sent.list)%>%
filter(File=="Herbert Hoover", word.count>=5)%>%
select(sentences, anger:trust)
speech.df=as.data.frame(speech.df)
as.character(speech.df$sentences[apply(speech.df[,-1], 2, which.max)])
speech.df=tbl_df(single_term_inaug_sent.list)%>%
filter(File=="Herbert Hoover", word.count>=5)%>%
select(sentences, anger:trust)
single_term_inaug_sent.list$President
unique(single_term_inaug_sent.list$President)
print("Herbert Hoover")
speech.df=tbl_df(single_term_inaug_sent.list)%>%
filter(File=="HerbertHoover", word.count>=5)%>%
select(sentences, anger:trust)
speech.df=as.data.frame(speech.df)
as.character(speech.df$sentences[apply(speech.df[,-1], 2, which.max)])
unique(multi_terms_inaug_sent2.list$President)
print("Abraham Lincoln")
speech.df=tbl_df(multi_terms_inaug_sent2.list)%>%
filter(File=="AbrahamLincoln", word.count>=5)%>%
select(sentences, anger:trust)
speech.df=as.data.frame(speech.df)
as.character(speech.df$sentences[apply(speech.df[,-1], 2, which.max)])
speech.df=tbl_df(multi_terms_inaug_sent2.list)%>%
filter(File=="ThomasJefferson", word.count>=5)%>%
select(sentences, anger:trust)
print("Thomas Jefferson")
speech.df=tbl_df(multi_terms_inaug_sent2.list)%>%
filter(File=="ThomasJefferson", word.count>=5)%>%
select(sentences, anger:trust)
speech.df=as.data.frame(speech.df)
as.character(speech.df$sentences[apply(speech.df[,-1], 2, which.max)])
print("William J. Clinton")
speech.df=tbl_df(multi_terms_inaug_sent2.list)%>%
filter(File=="WilliamJClinton", word.count>=5)%>%
select(sentences, anger:trust)
speech.df=as.data.frame(speech.df)
as.character(speech.df$sentences[apply(speech.df[,-1], 2, which.max)])
print("Franklin D. Roosevelt")
speech.df=tbl_df(multi_terms_inaug_sent1.list)%>%
filter(File=="FranklinDRoosevelt", word.count>=5)%>%
select(sentences, anger:trust)
speech.df=as.data.frame(speech.df)
as.character(speech.df$sentences[apply(speech.df[,-1], 2, which.max)])
print("Franklin D. Roosevelt")
speech.df=tbl_df(multi_terms_inaug_sent1.list)%>%
filter(File=="FranklinDRoosevelt", word.count>=5)%>%
select(sentences, anger:trust)
speech.df=as.data.frame(speech.df)
as.character(speech.df$sentences[apply(speech.df[,-1], 2, which.max)])
print("Franklin D. Roosevelt")
speech.df=tbl_df(multi_terms_inaug_sent1.list)%>%
filter(File=="FranklinDRoosevelt", word.count>=5)%>%
select(sentences, anger:trust)
speech.df=as.data.frame(speech.df)
as.character(speech.df$sentences[apply(speech.df[,-1], 2, which.max)])
par(mfrow=c(1,2),mar=c(2,4,4,2))
# Inaugural speeches
single_term_inaug_emo.mean<-colMeans(select(single_term_inaug_sent.list, anger:trust)>0.01)
multi_terms_inaug_emo.mean1<-colMeans(select(multi_terms_inaug_sent1.list, anger:trust)>0.01)
multi_terms_inaug_emo.mean2<-colMeans(select(multi_terms_inaug_sent2.list, anger:trust)>0.01)
inaug_emo.mean<-as.data.frame(cbind(single_term_inaug_emo.mean, multi_terms_inaug_emo.mean1,
multi_terms_inaug_emo.mean2),
col.names=c('single-term','multi-terms(1st)','multi-terms(2nd)'))
Col<-c('coral3','goldenrod1','darkolivegreen3')
barplot(t(inaug_emo.mean),col=Col,beside=TRUE,ylim=c(0,0.7),border=FALSE,las=1)
segments(1,seq(0,0.7,0.1),251,seq(0,0.7,0.1),lwd=1,col='lightgrey')
legend(x=3,y=0.7,fill=Col,bty='n',cex=1,
legend=c('single-term','multi-terms(1st)','multi-terms(2nd)'))
mtext('Inaugural Speeches',side=3,line=1,cex=1.5,font=2)
#Nomination speeches
single_term_nomin_emo.mean<-colMeans(select(single_term_nomin_sent.list, anger:trust)>0.01)
multi_terms_nomin_emo.mean1<-colMeans(select(multi_terms_nomin_sent1.list, anger:trust)>0.01)
multi_terms_nomin_emo.mean2<-colMeans(select(multi_terms_nomin_sent2.list, anger:trust)>0.01)
nomin_emo.mean<-as.data.frame(cbind(single_term_nomin_emo.mean, multi_terms_nomin_emo.mean1,
multi_terms_nomin_emo.mean2),
col.names=c('single-term','multi-terms(1st)','multi-terms(2nd)'))
Col<-c('coral3','goldenrod1','darkolivegreen3')
barplot(t(nomin_emo.mean),col=Col,beside=TRUE,ylim=c(0,0.7),border=FALSE,las=1)
segments(1,seq(0,0.7,0.1),251,seq(0,0.7,0.1),lwd=1,col='lightgrey')
legend(x=3,y=0.7,fill=Col,bty='n',cex=1,
legend=c('single-term','multi-terms(1st)','multi-terms(2nd)'))
mtext('Nomination Speeches',side=3,line=1,cex=1.5,font=2)
par(mfrow=c(1,3))
## Nomination speeches
ggplot(data=single_term_nomin_sent.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (single-term)')
ggplot(data=multi_terms_nomin_sent1.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (multi-terms (1st))')
ggplot(data=multi_terms_nomin_sent2.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (multi-terms (2nd))')
par(mfrow=c(1,3))
## Nomination speeches
ggplot(data=single_term_nomin_sent.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (single-term)')
ggplot(data=multi_terms_nomin_sent1.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (multi-terms (1st))')
ggplot(data=multi_terms_nomin_sent2.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (multi-terms (2nd))')
par(mfrow=c(1,3))
## Nomination speeches
ggplot(data=single_term_nomin_sent.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (single-term)')
ggplot(data=multi_terms_nomin_sent1.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (multi-terms (1st))')
ggplot(data=multi_terms_nomin_sent2.list, aes(x=word.count,
y=reorder(President,word.count,mean)))+
geom_density_ridges(fill='khaki1',alpha=0.5)+
theme(axis.text.y=element_text(size=9), axis.text.x=element_text(face='bold',size=9),
plot.title=element_text(face='bold.italic',size=15))+
scale_x_continuous(breaks=c(seq(0,50,10),seq(50,125,25)),labels=c(seq(0,50,10),seq(50,125,25)))+
labs(x='Numbe of Words / Per Sentence',y='',title='Nomination Speech (multi-terms (2nd))')
# Inaugural speeches
single_term_inaug_sent.list$term_type<-'single'
multi_terms_inaug_sent1.list$term_type<-'multi'
multi_terms_inaug_sent2.list$term_type<-'multi'
inaug_sent.list<-as.data.frame(rbind(single_term_inaug_sent.list, multi_terms_inaug_sent1.list,
multi_terms_inaug_sent2.list))
inaug_presid.summary=tbl_df(inaug_sent.list)%>%
group_by(File)%>%
summarise(
anger=mean(anger),
anticipation=mean(anticipation),
disgust=mean(disgust),
fear=mean(fear),
joy=mean(joy),
sadness=mean(sadness),
surprise=mean(surprise),
trust=mean(trust),
negative=mean(negative),
positive=mean(positive),
term_type=unique(term_type)
)
inaug_presid.summary=as.data.frame(inaug_presid.summary)
rownames(inaug_presid.summary)=as.character(inaug_presid.summary[,1])
km.res=kmeans(inaug_presid.summary[,-c(1,ncol(inaug_presid.summary))], iter.max=200, centers=2)
fviz_cluster(km.res, stand=FALSE, repel= TRUE,
data = inaug_presid.summary[,-c(1,ncol(inaug_presid.summary))],
xlab='', xaxt='n', ylab='', show.clust.cent=FALSE)
# Inaugural speeches
single_term_inaug_sent.list$term_type<-'single'
multi_terms_inaug_sent1.list$term_type<-'multi'
multi_terms_inaug_sent2.list$term_type<-'multi'
inaug_sent.list<-as.data.frame(rbind(single_term_inaug_sent.list, multi_terms_inaug_sent1.list,
multi_terms_inaug_sent2.list))
inaug_presid.summary=tbl_df(inaug_sent.list)%>%
group_by(File)%>%
summarise(
anger=mean(anger),
anticipation=mean(anticipation),
disgust=mean(disgust),
fear=mean(fear),
joy=mean(joy),
sadness=mean(sadness),
surprise=mean(surprise),
trust=mean(trust),
negative=mean(negative),
positive=mean(positive),
term_type=unique(term_type)
)
inaug_presid.summary=as.data.frame(inaug_presid.summary)
rownames(inaug_presid.summary)=as.character(inaug_presid.summary[,1])
km.res=kmeans(inaug_presid.summary[,-c(1,ncol(inaug_presid.summary))], iter.max=200, centers=2)
fviz_cluster(km.res, stand=FALSE, repel= TRUE,
data = inaug_presid.summary[,-c(1,ncol(inaug_presid.summary))],
xlab='', xaxt='n', ylab='', show.clust.cent=FALSE)
table(inaug_presid.summary$term_type,as.vector(km.res$cluster))
single_term_nomin_sent.list$term_type<-'single'
multi_terms_nomin_sent1.list$term_type<-'multi'
multi_terms_nomin_sent2.list$term_type<-'multi'
nomin_sent.list<-as.data.frame(rbind(single_term_nomin_sent.list, multi_terms_nomin_sent1.list,
multi_terms_nomin_sent2.list))
nomin_presid.summary=tbl_df(nomin_sent.list)%>%
group_by(File)%>%
summarise(
anger=mean(anger),
anticipation=mean(anticipation),
disgust=mean(disgust),
fear=mean(fear),
joy=mean(joy),
sadness=mean(sadness),
surprise=mean(surprise),
trust=mean(trust),
negative=mean(negative),
positive=mean(positive),
term_type=unique(term_type)
)
nomin_presid.summary=as.data.frame(nomin_presid.summary)
rownames(nomin_presid.summary)=as.character(nomin_presid.summary[,1])
km.res=kmeans(nomin_presid.summary[,-c(1,ncol(nomin_presid.summary))], iter.max=200, centers=2)
fviz_cluster(km.res, stand=FALSE, repel= TRUE,
data = nomin_presid.summary[,-c(1,ncol(nomin_presid.summary))],
xlab='', xaxt='n', ylab='', show.clust.cent=FALSE)
table(nomin_presid.summary$term_type,as.vector(km.res$cluster))
single_term_inaug_sent.list$term_type<-'single'
multi_terms_inaug_sent1.list$term_type<-'multi'
multi_terms_inaug_sent2.list$term_type<-'multi'
inaug_sent.list<-as.data.frame(rbind(single_term_inaug_sent.list, multi_terms_inaug_sent1.list,
multi_terms_inaug_sent2.list))
inaug_presid.summary=tbl_df(inaug_sent.list)%>%
group_by(File)%>%
summarise(
anger=mean(anger),
anticipation=mean(anticipation),
disgust=mean(disgust),
fear=mean(fear),
joy=mean(joy),
sadness=mean(sadness),
surprise=mean(surprise),
trust=mean(trust),
negative=mean(negative),
positive=mean(positive),
term_type=unique(term_type)
)
inaug_presid.summary=as.data.frame(inaug_presid.summary)
rownames(inaug_presid.summary)=as.character(inaug_presid.summary[,1])
km.res=kmeans(inaug_presid.summary[,-c(1,ncol(inaug_presid.summary))], iter.max=200, centers=2)
fviz_cluster(km.res, stand=FALSE, repel= TRUE,
data = inaug_presid.summary[,-c(1,ncol(inaug_presid.summary))],
xlab='', xaxt='n', ylab='', show.clust.cent=FALSE)
table(inaug_presid.summary$term_type,as.vector(km.res$cluster))
inaug_sent.list<-as.data.frame(rbind(single_term_inaug_sent.list, multi_terms_inaug_sent1.list))
inaug_presid.summary=tbl_df(inaug_sent.list)%>%
group_by(File)%>%
summarise(
anger=mean(anger),
anticipation=mean(anticipation),
disgust=mean(disgust),
fear=mean(fear),
joy=mean(joy),
sadness=mean(sadness),
surprise=mean(surprise),
trust=mean(trust),
negative=mean(negative),
positive=mean(positive),
term_type=unique(term_type)
)
inaug_presid.summary=as.data.frame(inaug_presid.summary)
rownames(inaug_presid.summary)=as.character(inaug_presid.summary[,1])
km.res=kmeans(inaug_presid.summary[,-c(1,ncol(inaug_presid.summary))], iter.max=200, centers=2)
fviz_cluster(km.res, stand=FALSE, repel= TRUE,
data = inaug_presid.summary[,-c(1,ncol(inaug_presid.summary))],
xlab='', xaxt='n', ylab='', show.clust.cent=FALSE)
table(inaug_presid.summary$term_type,as.vector(km.res$cluster))
inaug_sent.list<-as.data.frame(rbind(single_term_inaug_sent.list, multi_terms_inaug_sent1.list,
multi_terms_inaug_sent2.list))
inaug_presid.summary=tbl_df(inaug_sent.list)%>%
group_by(File)%>%
summarise(
anger=mean(anger),
anticipation=mean(anticipation),
disgust=mean(disgust),
fear=mean(fear),
joy=mean(joy),
sadness=mean(sadness),
surprise=mean(surprise),
trust=mean(trust),
negative=mean(negative),
positive=mean(positive),
term_type=unique(term_type)
)
inaug_presid.summary=as.data.frame(inaug_presid.summary)
rownames(inaug_presid.summary)=as.character(inaug_presid.summary[,1])
km.res=kmeans(inaug_presid.summary[,-c(1,ncol(inaug_presid.summary))], iter.max=200, centers=2)
fviz_cluster(km.res, stand=FALSE, repel= TRUE,
data = inaug_presid.summary[,-c(1,ncol(inaug_presid.summary))],
xlab='', xaxt='n', ylab='', show.clust.cent=FALSE)
table(inaug_presid.summary$term_type,as.vector(km.res$cluster))
# Inaugural speeches
single_term_inaug_sent.list$term_type<-'single'
multi_terms_inaug_sent1.list$term_type<-'multi'
multi_terms_inaug_sent2.list$term_type<-'multi'
inaug_sent.list<-as.data.frame(rbind(single_term_inaug_sent.list, multi_terms_inaug_sent1.list,
multi_terms_inaug_sent2.list))
inaug_presid.summary=tbl_df(inaug_sent.list)%>%
group_by(File)%>%
summarise(
anger=mean(anger),
anticipation=mean(anticipation),
disgust=mean(disgust),
fear=mean(fear),
joy=mean(joy),
sadness=mean(sadness),
surprise=mean(surprise),
trust=mean(trust),
negative=mean(negative),
positive=mean(positive),
term_type=unique(term_type)
)
inaug_presid.summary=as.data.frame(inaug_presid.summary)
rownames(inaug_presid.summary)=as.character(inaug_presid.summary[,1])
km.res=kmeans(inaug_presid.summary[,-c(1,ncol(inaug_presid.summary))], iter.max=200, centers=2)
fviz_cluster(km.res, stand=FALSE, repel= TRUE,
data = inaug_presid.summary[,-c(1,ncol(inaug_presid.summary))],
xlab='', xaxt='n', ylab='', show.clust.cent=FALSE)
table(inaug_presid.summary$term_type,as.vector(km.res$cluster))
single_term_nomin_sent.list$term_type<-'single'
multi_terms_nomin_sent1.list$term_type<-'multi'
multi_terms_nomin_sent2.list$term_type<-'multi'
nomin_sent.list<-as.data.frame(rbind(single_term_nomin_sent.list, multi_terms_nomin_sent1.list,
multi_terms_nomin_sent2.list))
nomin_presid.summary=tbl_df(nomin_sent.list)%>%
group_by(File)%>%
summarise(
anger=mean(anger),
anticipation=mean(anticipation),
disgust=mean(disgust),
fear=mean(fear),
joy=mean(joy),
sadness=mean(sadness),
surprise=mean(surprise),
trust=mean(trust),
negative=mean(negative),
positive=mean(positive),
term_type=unique(term_type)
)
nomin_presid.summary=as.data.frame(nomin_presid.summary)
rownames(nomin_presid.summary)=as.character(nomin_presid.summary[,1])
km.res=kmeans(nomin_presid.summary[,-c(1,ncol(nomin_presid.summary))], iter.max=200, centers=2)
fviz_cluster(km.res, stand=FALSE, repel= TRUE,
data = nomin_presid.summary[,-c(1,ncol(nomin_presid.summary))],
xlab='', xaxt='n', ylab='', show.clust.cent=FALSE)
table(nomin_presid.summary$term_type,as.vector(km.res$cluster))
setwd("~/Documents/GitHub/fall2017-project1-Annie-Shi")
